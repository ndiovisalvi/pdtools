@model DPCoreTools.SeedWork.Models.MultiProtocolGateway

<header class="DPCore-header-main">
  <h2 style="padding: .5em 0;"><img src="~/images/mpgw_new.gif" />@Html.DisplayFor(model => model.Name)</h2>
</header>

<div data-control-container="MultiProtocolGateway">
  <section class="DPCore-section-main">
    <div class="row">
      <div class="col-md-4">
        <div class="form-group">
          <b>Ambiente:</b>
          @Html.DisplayFor(model => model.Environment)
        </div>
      </div>
      <div class="col-md-4">
        <div class="form-group">
          <b>Host:</b>
          @Html.DisplayFor(model => model.Host)
        </div>
      </div>
      <div class="col-md-4">
        <div class="form-group">
          <b>Dominio:</b>
          @Html.DisplayFor(model => model.Domain)
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-4">
        <div class="form-group">
          <b>Status:</b>
          @if (Model.OpState.Status.ToLower() == "up")
          {
            <i class="fa fa-arrow-circle-up" style="color: green"></i>
          }
          else if (Model.OpState.Status.ToLower() == "down")
          {
            <i class="fa fa-arrow-circle-down" style="color:red"></i>
          }
          else
          {
            <i class="fa fa-info-circle" style="color:yellow">No available</i>
          }
        </div>
        <div class="form-group">
          @Html.DisplayFor(model => model.OpState.Status)
          @if (Model.OpState.Status.ToLower() != "up")
          {
            <i id="imgOpStatus" class="fa fa-search-plus" data-toggle="modal" data-target="#dvOpStatus" style="color:brown"></i>
          }
        </div>
      </div>
      <div class="col-md-4">
      </div>
      <div class="col-md-4">
        <div class="form-group">
          <b>Probe:</b>
          <a id="cngProbe" asp-action="ChangeProbe" asp-controller="MultiProtocolGatewayService" asp-route-id="@Model.Name" asp-route-Environment="@Model.Environment" asp-route-Host="@Model.Host" asp-route-Domain="@Model.Domain" asp-route-Enable="@Model.Probe">
            @if (Model.Probe == "off")
            {
              <i id="imgProbe" class="fa fa-power-off" style="color:red"></i>
            }
            else
            {
              <i id="imgProbe" class="fa fa-power-off" style="color:green"></i>
            }
          </a>
        </div>
        <div id="dvProbeText" class="form-group">
          @Html.DisplayFor(model => model.Probe)
        </div>
      </div>
    </div>
  </section>

  <section class="DPCore-section-main">
    <h5>General Configuration</h5>
    <div class="row">
      <div class="col-md-4">
        <div class="form-group">
          <b>Summary:</b>
        </div>
        <div class="form-group">
          @Html.DisplayFor(model => model.Summary)
        </div>
      </div>
      <div class="col-md-4">
        <div class="form-group">
          <b>Admin State:</b>
        </div>
        <div class="form-group">
          @Html.DisplayFor(model => model.AdminState)
        </div>
      </div>
      <div class="col-md-4">
        <div class="form-group">
          <b>XML Manager:</b>
        </div>
        <div class="form-group">
          @Html.DisplayFor(model => model.XmlManager)
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-4">
        <div class="form-group">
          <b>Multi-Protocol Gateway Policy:</b>
        </div>
        <div class="form-group">
          @Html.DisplayFor(model => model.PolicyAttachments)
        </div>
      </div>
      <div class="col-md-4">
        <div class="form-group">
          <b>Priority:</b>
        </div>
        <div class="form-group">
          @Html.DisplayFor(model => model.Priority)
        </div>
      </div>
      <div class="col-md-4">
      </div>
    </div>
  </section>

  <section class="DPCore-section-main">
    <h5>Back Side Settings</h5>
    <div class="row">
      <div class="col-md-4">
        <div class="form-group">
          <b>Response Type:</b>
        </div>
        <div class="form-group">
          @Html.DisplayFor(model => model.ResponseType)
        </div>
      </div>
      <div class="col-md-4">
        <div class="form-group">
          <b>HTTP Version to Server:</b>
        </div>
        <div class="form-group">
          @Html.DisplayFor(model => model.BackHttpVersion)
        </div>
      </div>
      <div class="col-md-4">
        <div class="form-group">
          <b>SSL Client Type:</b>
        </div>
        <div class="form-group">
          @Html.DisplayFor(model => model.SslClientConfigType)
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-4">
        <div class="form-group">
          <b>Back Side Timeout:</b>
        </div>
        <div class="form-group">
          @Html.DisplayFor(model => model.BackTimeout) seconds
        </div>
      </div>
      <div class="col-md-4">
        <div class="form-group">
          <b>SSL Client:</b>
        </div>
        <div class="form-group">
          @Html.DisplayFor(model => model.SslClient)
        </div>
      </div>
      <div class="col-md-4">
        <div class="form-group">
          <b>Backend Url:</b>
        </div>
        <div class="form-group">
          @Html.DisplayFor(model => model.BackendUrl)
        </div>
      </div>
    </div>
  </section>

  <section class="DPCore-section-main">
    <h5>Front Side Settings</h5>
    <div class="row">
      <div class="col-md-8">
        <div class="form-group">
          <b>Front Side Protocol:</b>
        </div>
        <div class="form-group">
          @foreach (var item in Model.FrontProtocol)
          {
            @Html.Label(string.Format("{0} ({1} Handler)", item.Name, item.Class.Replace("SourceProtocolHandler", "")))
          <a asp-action="Details" asp-controller="FrontSideHandler" asp-route-id="@item.Name" asp-route-Environment="@item.Environment" asp-route-Host="@item.Host" asp-route-Domain="@item.Domain" asp-route-Protocol="@item.Class.Replace("SourceProtocolHandler", "")">

            @if (item.OpState.Status.ToLower() == "up")
            {
              <i id="imgFshDetails" class="fa fa-search-plus"  style="color:green"></i>
            }
            else if (item.OpState.Status.ToLower() == "down")
            {
              <i id="imgFshDetails" class="fa fa-search-plus"  style="color:red"></i>
            }
           
          </a>


          }
        </div>
      </div>
      <div class="col-md-4">
        <div class="form-group">
          <b>Front Side Timeout:</b>
        </div>
        <div class="form-group">
          @Html.DisplayFor(model => model.FrontTimeout) seconds
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-4">
        <div class="form-group">
          <b>Request Type:</b>
        </div>
        <div class="form-group">
          @Html.DisplayFor(model => model.RequestType)
        </div>
      </div>
    </div>
  </section>

  <section class="DPCore-section-main">
    <h5>Advanced Settings</h5>
    <div class="row">
      <div class="col-md-4">
        <div class="form-group">
          <b>Front Persistent Timeout:</b>
        </div>
        <div class="form-group">
          @Html.DisplayFor(model => model.FrontPersistentTimeout) seconds
        </div>
      </div>
      <div class="col-md-4">
        <div class="form-group">
          <b>Back Persistent Timeout:</b>
        </div>
        <div class="form-group">
          @Html.DisplayFor(model => model.BackPersistentTimeout) seconds
        </div>
      </div>
      <div class="col-md-4">
        <div class="form-group">
          <b>Transaction Timeout:</b>
        </div>
        <div class="form-group">
          @Html.DisplayFor(model => model.TransactionTimeout) ms
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-4">
        <div class="form-group">
          <b>Allow Compression:</b>
        </div>
        <div class="form-group">
          @Html.DisplayFor(model => model.AllowCompression)
        </div>
      </div>
      <div class="col-md-4">
      </div>
      <div class="col-md-4">
      </div>
    </div>
  </section>
  <footer class="DPCore-footer-main">
    <a href="javascript:history.back();"><i class="fas fa-caret-left"></i> Volver</a>
  </footer>
</div>

<div id="dvloading" class="modal-Ajax" style="display: none">
  <div class="center">
    <img alt="" src="~/images/gif/loading.gif" />
  </div>
</div>

<div class="modal fade" id="dvOpStatus" tabindex="-1" role="dialog" aria-labelledby="lblOpStatus" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title" id="lblOpStatus"><i class="fa fa-info-circle" style="color: orangered"></i> - Detalle Estado:</h4>
        <button type="button" class="close" data-dismiss="modal" data-backdrop="false" aria-label="Close"><span aria-hidden="true">&times;</span></button>
      </div>
      <div class="modal-body">
        @HtmlHelperPartialExtensions.Partial(Html, "_OpStatus", Model.OpState)
      </div>
      <div class="modal-footer">
        <button type="button" id="btnCloseModal" class="btn btn-secondary" data-backdrop="false" data-dismiss="modal">Cerrar</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


@section Scripts {
  <script>
    (function () {
      $('#cngProbe').on('click', function (e) {
        e.preventDefault();
        var url = $(this).attr('href');
        $("#dvloading").show();
        $.ajax({
          url: url,
          type: "POST",
          success: function (result) {
            if (result.code == 0) {
              if ($('#imgProbe').css('color') == "rgb(0, 128, 0)") {
                $('#imgProbe').css('color', 'red');
                $('#dvProbeText').html("off");
                var url2 = url.replace('&Enable=on', '&Enable=off');
                $('#cngProbe').prop("href", url2);
              } else {
                $('#imgProbe').css('color', 'green');
                $('#dvProbeText').html("on");
                var url2 = url.replace('&Enable=off', '&Enable=on');
                $('#cngProbe').prop("href", url2);
              }
              ALERT.SHOW_SUCCESS(result.message, 2000);
            } else {
              ALERT.SHOW_ERROR(result.message, 2000);
            }
          },
          error: function (xhr, ajaxOptions, thrownError) {
            console.log('ERR', xhr.status, thrownError);
            ALERT.SHOW_ERROR(PROP.MGE.ERROR_COMMAND_FAIL, 2000);
          },
          complete: function () {
            $("#dvloading").hide();
          }
        });
      });

      ('#dvOpStatus').on('shown.bs.modal',
        function () {
          $('#btnCloseModal').trigger('focus');
        });
      ('#FshDetails').on('shown.bs.modal',
        function () {
          $('#btnCloseModal').trigger('focus');
        });
    })();
  </script>
}